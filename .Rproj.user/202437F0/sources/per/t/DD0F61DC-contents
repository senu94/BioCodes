aa_codons = list(F=c("TTT","TTC"),
                 L=c("TTA","TTG","CTT","CTC","CTA","CTG"),
                 S=c("TCT","TCC","TCA","TCG","AGT","AGC"),
                 Y=c("TAT","TAC"),
                 X=c("TAA","TAG","TGA"),
                 C=c("TGT","TGC"),
                 W=c("TGG"),
                 P=c("CCT","CCC","CCA","CCG"),
                 H=c("CAT","CAC"),
                 Q=c("CAA","CAG"),
                 R=c("CGT","CGC","CGA","CGG","AGA","AGG"),
                 I=c("ATT","ATC","ATA"),
                 M=c("ATG"),
                 T=c("ACT","ACC","ACG","ACA"),
                 N=c("AAT","AAC"),
                 K=c("AAA","AAG"),
                 V=c("GTT","GTC","GTA","GTG"),
                 A=c("GCT","GCC","GCA","GCG"),
                 D=c("GAT","GAC"),
                 E=c("GAA","GAG"),
                 G=c("GGT","GGC","GGA","GGG")
                 )

dnastring = c("TCGAAGCGCCGAGAGATACCAAACCACCGCAGCCATGGCCGTGGACACGAGCAGTAAGCTTTCTCGCAGCGTCCTGATGCTGCTTCTGCTGCTCTCTGTGCTTCTTGTAGCAGCATCAGCAACAACGGAACATGAAGCAGAGGAGAAGGGAAGGGAAGGGGGGGAGCCGTCGGAGTCGTGGACTGCCTGGGCTAAGGATAAGATATCCGGTGGTTTTGGTCTCAAGAAGAACCAGGAAGACGAGGAGGCGGAGGACGCAACGAGGAAGGTCGAAGAGGCTGCGACGACAGGTCGGGAACGAGGCCAAGAGATGATTCATGGTAAGTCCGAGTAGGCTTTGGACGCCGTTGAGAAGATGTTCTGGATTTAATGGCTTGATCTTCGTTGCAGACAAGGCAGGGAAGGCCAAGGAAGCAGCTGAGACGAGCACAGAAAAGCTGCAGGAGATCGCCTCAGGTTAGCTTGATCTGTCTCCATAACCCGCTTAACGTTTTGTTGGCTTTGGTGGTCTTGTGCTCGAGGTGTGGACATGGGGTTGTACAGAGATCGGAAGCGAGGCGGCGGAGAAGATGGGCAAAGCAAAAGAGGCTGCCGCGGAGAAGGCAGCGAAGGCAAAGGAAGCGGCGGGGAAGACAGCAAAAGAGGCAGCGGCCGAGGCCAAAGAGAAGGGGGCCGAGGCGAAAGAGGAGGCGGTGAAGACAGCGGAAGAGGCGGCGGCCAAGGCGAGGGAGTCTGCCACGGGCGCGACGGAGAAGGCCAAAGAGAAGGCGAAGGAAACGGTGGACGCGGCAAAGGAGAAGGTCGAGGCGGCCAAGGAGTACGTCATGGGCGGCGGGGCTGAGAGACACGAAGAAGAGCTGTAA")

getPossibleProteins = function(dnastring){
  DNA = strsplit(dnastring,"")
  lengthDNA <<- length(DNA[[1]])
  DNArev <<- list(rep(NA, times=lengthDNA))
  reverseComplement(DNA)

  getProteinCode(DNA)
  getProteinCode(DNArev)
}

GetAminoAcid = function(codon){
for(aa in 1:length(aa_codons)){
  n = 1:length(aa_codons[[aa]])
  for(code in n){
    if(aa_codons[[aa]][code]==codon){
      cat(names(aa_codons[aa]))
    }
  }
 }
}

getProteinCode = function(DNA){
  frames = 1:3
  for(frame in frames){
    printed = 0
    cat("\n")
    cat("Frame No", frame,"\n")
    d = seq(from=frame, to=nchar(dnastring), by=3)
    for(l in d){
      #print("\n")
      codon = paste(c(DNA[[1]][l],DNA[[1]][l+1],DNA[[1]][l+2]), collapse = '')
      #cat(codon,l,"\n")
      if(codon == "ATG"&& printed<l){
        cat("Start Position:",l,"\t")
        x=l
        #cat("\n")
        while(x <=(nchar(dnastring))){
            codon = paste(c(DNA[[1]][x],DNA[[1]][x+1],DNA[[1]][x+2]), collapse = '')
            #cat(x,":",codon,"-")
            if(codon==aa_codons$X[1]|codon==aa_codons$X[2]|codon==aa_codons$X[3]){
              cat("\tEnd Position:",x,"\n")
              printed = x
              break
            }
            GetAminoAcid(codon)
            x=x+3
        }
      }
    }
  }
}

reverseComplement = function(DNA){
  reverseno=0
  for(i in 1:lengthDNA){
    #cat(complementNucleotide(DNA[[1]][(lengthDNA-reverseno)]))
    DNArev[[1]][i]<<-complementNucleotide(DNA[[1]][(lengthDNA-reverseno)])
    reverseno=reverseno+1
  }
}

complementNucleotide = function(nucleotide){
  if(nucleotide=="A"){
    return("T") 
  }
  else if(nucleotide=="G"){
    return("C")
  }
  else if(nucleotide=="C"){
    return("G")
  }
  else if(nucleotide=="T"){
    return("A")
  }
}

getPossibleProteins(dnastring)

